{"ast":null,"code":"import _slicedToArray from\"/Users/BOM/Desktop/WEB/react-project/react-beginner/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Btn(_ref){var text=_ref.text,onClick=_ref.onClick,fontSize=_ref.fontSize;return/*#__PURE__*/_jsx(\"button\",{onClick:onClick,style:{backgroundColor:\"tomato\",color:\"white\",border:\"none\",padding:\"10px 25px\",borderRadius:\"10px\",marginRight:\"10px\",fontSize:fontSize},children:text});}function Buttons(){var _useState=useState(\"Save\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var changeValue=function changeValue(){return setValue('Changed Save Btn');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Buttons\"}),/*#__PURE__*/_jsx(Btn,{text:\"Confirm\",fontSize:20}),/*#__PURE__*/_jsx(Btn,{text:value,onClick:changeValue})]});}// NOTE!\n// Props\n// - props는 부모 컴포넌트로 부터 자식 컴포넌트에게 데이터를 전송하는 방식이다.\n// - 부모에 props를 사용하면 자식 컴포넌트(함수)의 인자로 object가 들어가게 된다.\n// - 예전에는 function Btn(props) { {props.text} } -> 이런식으로 썼지만\n//   현재는 function Btn({text}) { {text} } -> 이렇게 바로 중괄호를 열어 property를 받아온다.\n// - props에는 sting, number, boolean 또는 함수를 넣을 수도 있다.\n// - <Btn onClick={changeValue} /> 이것은 이벤트 리스너가 아닌,\n//   컴포넌트에 onClick이라는 props를 전달한 것이다. 여기서 onClick은 단순히 props의 이름이다. \n// React.memo\n// - React.memo는 component가 동일한 props로 동일한 결과를 렌더린해낸다면,\n//   React.memo를 호출하고 결과를 메모이지(memoizing)하도록 래핑하여 경우에 따라\n//   성능 향상을 누릴 수 있다. 그리고 React.memo는 props 변화에만 영향을 준다.\n// - React.memo 메서드는 오직 성능 최적화를 위하여 사용됩니다.\n// Prop Types\n// - 터미널에 prop-types라이브러리를 설치한다. `npm install prop-types`\n// - 필수로 모든 component에 값을 확인하려면 .isRequired를 사용,\n//   선택 사항이라면 .isRequired를 사용하지 말자.\n// - 더 많은 사용법은 여기를 참고 https://www.npmjs.com/package/prop-types\nexport default Buttons;","map":{"version":3,"sources":["/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/PropFnc.js"],"names":["React","useState","Btn","text","onClick","fontSize","backgroundColor","color","border","padding","borderRadius","marginRight","Buttons","value","setValue","changeValue"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAIA,QAASC,CAAAA,GAAT,MAA0C,IAA3BC,CAAAA,IAA2B,MAA3BA,IAA2B,CAArBC,OAAqB,MAArBA,OAAqB,CAAZC,QAAY,MAAZA,QAAY,CACxC,mBACE,eACE,OAAO,CAAED,OADX,CAEE,KAAK,CAAE,CACLE,eAAe,CAAE,QADZ,CAELC,KAAK,CAAE,OAFF,CAGLC,MAAM,CAAE,MAHH,CAILC,OAAO,CAAE,WAJJ,CAKLC,YAAY,CAAE,MALT,CAMLC,WAAW,CAAE,MANR,CAOLN,QAAQ,CAARA,QAPK,CAFT,UAUMF,IAVN,EADF,CAaD,CAQD,QAASS,CAAAA,OAAT,EAAmB,CACjB,cAA0BX,QAAQ,CAAC,MAAD,CAAlC,wCAAOY,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,QAAQ,CAAC,kBAAD,CAAd,EAApB,CAEA,mBACE,oCACE,+BADF,cAEE,KAAC,GAAD,EAAK,IAAI,CAAC,SAAV,CAAoB,QAAQ,CAAE,EAA9B,EAFF,cAGE,KAAC,GAAD,EAAK,IAAI,CAAED,KAAX,CAAkB,OAAO,CAAEE,WAA3B,EAHF,GADF,CAOD,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,cAAeH,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\n\nfunction Btn({ text, onClick, fontSize }) {\n  return (\n    <button\n      onClick={onClick}\n      style={{\n        backgroundColor: \"tomato\",\n        color: \"white\",\n        border: \"none\",\n        padding: \"10px 25px\",\n        borderRadius: \"10px\",\n        marginRight: \"10px\",\n        fontSize,\n      }}>{text}</button>\n  )\n}\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  fontSize: PropTypes.number,\n  onClick: PropTypes.func,\n}\n\nfunction Buttons() {\n  const [value, setValue] = useState(\"Save\");\n  const changeValue = () => setValue('Changed Save Btn');\n\n  return (\n    <div>\n      <h1>Buttons</h1>\n      <Btn text=\"Confirm\" fontSize={20} />\n      <Btn text={value} onClick={changeValue} />\n    </div>\n  );\n}\n\n// NOTE!\n\n// Props\n// - props는 부모 컴포넌트로 부터 자식 컴포넌트에게 데이터를 전송하는 방식이다.\n// - 부모에 props를 사용하면 자식 컴포넌트(함수)의 인자로 object가 들어가게 된다.\n// - 예전에는 function Btn(props) { {props.text} } -> 이런식으로 썼지만\n//   현재는 function Btn({text}) { {text} } -> 이렇게 바로 중괄호를 열어 property를 받아온다.\n// - props에는 sting, number, boolean 또는 함수를 넣을 수도 있다.\n// - <Btn onClick={changeValue} /> 이것은 이벤트 리스너가 아닌,\n//   컴포넌트에 onClick이라는 props를 전달한 것이다. 여기서 onClick은 단순히 props의 이름이다. \n\n// React.memo\n// - React.memo는 component가 동일한 props로 동일한 결과를 렌더린해낸다면,\n//   React.memo를 호출하고 결과를 메모이지(memoizing)하도록 래핑하여 경우에 따라\n//   성능 향상을 누릴 수 있다. 그리고 React.memo는 props 변화에만 영향을 준다.\n// - React.memo 메서드는 오직 성능 최적화를 위하여 사용됩니다.\n\n// Prop Types\n// - 터미널에 prop-types라이브러리를 설치한다. `npm install prop-types`\n// - 필수로 모든 component에 값을 확인하려면 .isRequired를 사용,\n//   선택 사항이라면 .isRequired를 사용하지 말자.\n// - 더 많은 사용법은 여기를 참고 https://www.npmjs.com/package/prop-types\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}