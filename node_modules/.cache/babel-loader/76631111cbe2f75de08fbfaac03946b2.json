{"ast":null,"code":"var _jsxFileName = \"/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/StateExample.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MinutesToHours() {\n  _s();\n\n  const [number, setNumber] = useState('');\n  const [inverted, setInverted] = useState(false);\n\n  const onChange = event => setNumber(event.target.value);\n\n  const reset = () => setNumber('');\n\n  const onInvert = () => {\n    setInverted(current => !current);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Minutes to Hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Minutes\",\n        children: \"Minutes \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"Minutes\",\n        placeholder: \"Minutes\",\n        type: \"number\",\n        value: inverted ? number * 60 : number,\n        onChange: onChange,\n        disabled: inverted === true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Hours\",\n        children: \"Hours \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"Hours\",\n        placeholder: \"Hours\",\n        type: \"number\",\n        value: inverted ? number : Math.round(number / 60),\n        onChange: onChange,\n        disabled: inverted === false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInvert,\n      children: inverted ? 'Turn back' : 'Inverted'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MinutesToHours, \"azvV98hb3/iUXQ54ZFBEqRpqOAg=\");\n\n_c = MinutesToHours;\n\nfunction KilometersToMiles() {\n  _s2();\n\n  const [number, setNumber] = useState('');\n  const [inverted, setInverted] = useState(false);\n\n  const onChange = event => setNumber(event.target.value);\n\n  const reset = () => setNumber('');\n\n  const onInvert = () => {\n    setInverted(prev => !prev);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Km to Miles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"miles\",\n        children: \"Miles \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"miles\",\n        placeholder: \"Miles\",\n        type: \"number\",\n        value: inverted ? number * 1.609 : null,\n        onChange: onChange,\n        disabled: inverted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"kilometers\",\n        children: \"Kilometers \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"kilometers\",\n        placeholder: \"Kilometers\",\n        type: \"number\",\n        value: inverted ? null : number * 0.621371,\n        onChange: onChange,\n        disabled: !inverted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInvert,\n      children: \"Inverte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(KilometersToMiles, \"azvV98hb3/iUXQ54ZFBEqRpqOAg=\");\n\n_c2 = KilometersToMiles;\n\nfunction Converter() {\n  _s3();\n\n  const [index, setIndex] = useState(0);\n\n  const onSelect = event => {\n    setIndex(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Super Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: index,\n      onChange: onSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"---select Units---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Minutes & Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Kilometers & Miles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), index === \"0\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please Select your units\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 24\n    }, this) : null, index === \"1\" ? /*#__PURE__*/_jsxDEV(MinutesToHours, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 24\n    }, this) : null, index === \"2\" ? /*#__PURE__*/_jsxDEV(KilometersToMiles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Converter, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n\n_c3 = Converter;\nexport default Converter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MinutesToHours\");\n$RefreshReg$(_c2, \"KilometersToMiles\");\n$RefreshReg$(_c3, \"Converter\");","map":{"version":3,"sources":["/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/StateExample.js"],"names":["React","useState","MinutesToHours","number","setNumber","inverted","setInverted","onChange","event","target","value","reset","onInvert","current","Math","round","KilometersToMiles","prev","Converter","index","setIndex","onSelect"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction MinutesToHours() {\n  const [number, setNumber] = useState('');\n  const [inverted, setInverted] = useState(false);\n\n  const onChange = (event) => setNumber(event.target.value);\n  const reset = () => setNumber('');\n  const onInvert = () => {\n    setInverted(current => !current);\n    reset();\n  };\n\n  return (\n    <div>\n      <h4>Minutes to Hours</h4>\n      <div>\n        <label htmlFor=\"Minutes\">Minutes </label>\n        <input\n          id=\"Minutes\"\n          placeholder=\"Minutes\"\n          type=\"number\"\n          value={inverted ? number * 60 : number}\n          onChange={onChange}\n          disabled={inverted === true}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"Hours\">Hours </label>\n        <input\n          id=\"Hours\"\n          placeholder=\"Hours\"\n          type=\"number\"\n          value={inverted ? number : Math.round(number / 60)}\n          onChange={onChange}\n          disabled={inverted === false}\n        />\n      </div>\n      <button onClick={reset}>Reset</button>\n      <button onClick={onInvert}>{inverted ? 'Turn back' : 'Inverted'}</button>\n    </div>\n  )\n}\n\nfunction KilometersToMiles() {\n  const [number, setNumber] = useState('');\n  const [inverted, setInverted] = useState(false);\n\n  const onChange = (event) => setNumber(event.target.value);\n  const reset = () => setNumber('');\n  const onInvert = () => {\n    setInverted(prev => !prev);\n    reset();\n  }\n\n  return (\n    <div>\n      <h4>Km to Miles</h4>\n      <div>\n        <label htmlFor=\"miles\">Miles </label>\n        <input\n          id=\"miles\"\n          placeholder=\"Miles\"\n          type=\"number\"\n          value={inverted ? number * 1.609 : null}\n          onChange={onChange}\n          disabled={inverted}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"kilometers\">Kilometers </label>\n        <input\n          id=\"kilometers\"\n          placeholder=\"Kilometers\"\n          type=\"number\"\n          value={inverted ? null : number * 0.621371}\n          onChange={onChange}\n          disabled={!inverted}\n        />\n      </div>\n      <button onClick={reset}>Reset</button>\n      <button onClick={onInvert}>Inverte</button>\n    </div>\n  );\n}\n\nfunction Converter() {\n  const [index, setIndex] = useState(0);\n  const onSelect = (event) => {\n    setIndex(event.target.value);\n  }\n\n  return (\n    <div>\n      <h1>Super Converter</h1>\n      <select value={index} onChange={onSelect}>\n        <option value=\"0\">---select Units---</option>\n        <option value=\"1\">\n          Minutes & Hours\n        </option>\n        <option value=\"2\">\n          Kilometers & Miles\n        </option>\n      </select>\n      {index === \"0\" ? <h4>Please Select your units</h4> : null}\n      {index === \"1\" ? <MinutesToHours /> : null}\n      {index === \"2\" ? <KilometersToMiles /> : null}\n    </div>\n  );\n}\n\nexport default Converter;"]},"metadata":{},"sourceType":"module"}