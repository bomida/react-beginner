{"ast":null,"code":"var _jsxFileName = \"/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/UseEffect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UseEffect() {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n\n  const onClick = () => setCounter(prev => prev + 1);\n\n  console.log('I run all the time');\n\n  const iRunOnlyOnce = () => console.log('I run Only Once'); // useEffect(iRunOnlyOnce, []);\n\n\n  useEffect(() => {\n    console.log('Call the API...');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useEffect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        fontSize: \"20px\"\n      },\n      onClick: onClick,\n      children: \"Click \\uD83D\\uDE0E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n} // 📘 NOTE\n// - 두 개의 argument를 가지는 함수\n// - 첫 번째 argument는 우리가 딱 한번만 실행하고 싶은 코드를 넣는다.\n// - 두 번째는 [] -> 배열을 넣어준다.\n// - useEffect가 componenet의 첫 번째 렌더 시점에 iRunOnlyOnce함수를 호출하고\n// - 상태를 변화시키면 더이상 iRunOnlyOnce는 호출되지 않는다.\n// - API를 한 번만 호출하고 싶을 때 사용한다.\n\n\n_s(UseEffect, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n\n_c = UseEffect;\nexport default UseEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffect\");","map":{"version":3,"sources":["/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/UseEffect.js"],"names":["React","useState","useEffect","UseEffect","counter","setCounter","onClick","prev","console","log","iRunOnlyOnce","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;;AACA,QAAMK,OAAO,GAAG,MAAMD,UAAU,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAhC;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,QAAMC,YAAY,GAAG,MAAMF,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA3B,CAJmB,CAMnB;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAA,gBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,YAFK,eAGL;AAAQ,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAAf;AAAqC,MAAA,OAAO,EAAEL,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK,eAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;GAzBSH,S;;KAAAA,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction UseEffect() {\n  const [counter, setCounter] = useState(0);\n  const onClick = () => setCounter(prev => prev + 1);\n  console.log('I run all the time');\n  const iRunOnlyOnce = () => console.log('I run Only Once');\n\n  // useEffect(iRunOnlyOnce, []);\n  useEffect(() => {\n    console.log('Call the API...');\n  }, []);\n\n  return <div>\n    <h1>useEffect</h1>\n    <h3>{counter}</h3>\n    <button style={{ fontSize: \"20px\" }} onClick={onClick}>Click 😎</button>\n    <h3>Search Practice</h3>\n  </div>\n}\n\n// 📘 NOTE\n// - 두 개의 argument를 가지는 함수\n// - 첫 번째 argument는 우리가 딱 한번만 실행하고 싶은 코드를 넣는다.\n// - 두 번째는 [] -> 배열을 넣어준다.\n// - useEffect가 componenet의 첫 번째 렌더 시점에 iRunOnlyOnce함수를 호출하고\n// - 상태를 변화시키면 더이상 iRunOnlyOnce는 호출되지 않는다.\n// - API를 한 번만 호출하고 싶을 때 사용한다.\nexport default UseEffect;"]},"metadata":{},"sourceType":"module"}