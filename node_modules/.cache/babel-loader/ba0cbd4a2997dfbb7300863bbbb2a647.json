{"ast":null,"code":"var _jsxFileName = \"/Users/BOM/Desktop/WEB/react-project/movie-web-service/src/routes/Detail.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetail from \"../components/MovieDetail\";\nimport styles from \"../css/Movie.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const {\n    id\n  } = useParams();\n  const getMovie = useCallback(async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)).json();\n    console.log([json.data.movie]);\n    /* 그냥 json.data.movie로 하면 object이기 때문에 map함수가 적용안됨. map은 arrary에서 적용 */\n\n    setMovies([json.data.movie]);\n    setLoading(false);\n  }, [id]);\n  useEffect(() => {\n    getMovie();\n  }, [getMovie]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.detail__center,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieDetail, {\n      title: movie.title,\n      bkImage: movie.background_image_original,\n      longTitle: movie.title_long,\n      summary: movie.description_full,\n      rating: movie.rating,\n      runtime: movie.runtime,\n      genres: movie.genres\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Detail, \"XeL/gr8QQk3+av5ixjRtH/q2ziU=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/BOM/Desktop/WEB/react-project/movie-web-service/src/routes/Detail.js"],"names":["useCallback","useEffect","useState","useParams","MovieDetail","styles","Detail","loading","setLoading","movies","setMovies","id","getMovie","json","fetch","console","log","data","movie","detail__center","map","title","background_image_original","title_long","description_full","rating","runtime","genres"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGZ,WAAW,CAAC,YAAY;AACvC,UAAMa,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CAAE,qDAAoDH,EAAG,EAAzD,CADM,EAEjBE,IAFiB,EAAnB;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACH,IAAI,CAACI,IAAL,CAAUC,KAAX,CAAZ;AACA;;AACAR,IAAAA,SAAS,CAAC,CAACG,IAAI,CAACI,IAAL,CAAUC,KAAX,CAAD,CAAT;AACAV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAR2B,EAQzB,CAACG,EAAD,CARyB,CAA5B;AASAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGA,SAAOL,OAAO,gBACZ;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACc,cAAvB;AAAA,cACGV,MAAM,CAACW,GAAP,CAAYF,KAAD,iBACV,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,KAAK,CAACG,KAFf;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACI,yBAHjB;AAIE,MAAA,SAAS,EAAEJ,KAAK,CAACK,UAJnB;AAKE,MAAA,OAAO,EAAEL,KAAK,CAACM,gBALjB;AAME,MAAA,MAAM,EAAEN,KAAK,CAACO,MANhB;AAOE,MAAA,OAAO,EAAEP,KAAK,CAACQ,OAPjB;AAQE,MAAA,MAAM,EAAER,KAAK,CAACS;AARhB,OACOT,KAAK,CAACP,EADb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAkBD,CAlCD;;GAAML,M;UAGWH,S;;;KAHXG,M;AAoCN,eAAeA,MAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetail from \"../components/MovieDetail\";\nimport styles from \"../css/Movie.module.css\";\n\nconst Detail = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const { id } = useParams();\n  const getMovie = useCallback(async () => {\n    const json = await (\n      await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n    ).json();\n    console.log([json.data.movie]);\n    /* 그냥 json.data.movie로 하면 object이기 때문에 map함수가 적용안됨. map은 arrary에서 적용 */\n    setMovies([json.data.movie]);\n    setLoading(false);\n  }, [id]);\n  useEffect(() => {\n    getMovie();\n  }, [getMovie]);\n  return loading ? (\n    <div className={styles.loading}></div>\n  ) : (\n    <div className={styles.detail__center}>\n      {movies.map((movie) => (\n        <MovieDetail\n          key={movie.id}\n          title={movie.title}\n          bkImage={movie.background_image_original}\n          longTitle={movie.title_long}\n          summary={movie.description_full}\n          rating={movie.rating}\n          runtime={movie.runtime}\n          genres={movie.genres}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}