{"ast":null,"code":"var _jsxFileName = \"/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/StateFnc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StateFnc() {\n  _s();\n\n  const [number, setNumber] = useState(0);\n\n  const PlusNumer = () => setNumber(prev => prev + 1);\n\n  const MinusNumber = () => setNumber(prev => prev - 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The number is : \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: PlusNumer,\n      children: \"Plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: MinusNumber,\n      children: \"Minus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n} // NOTE!\n// - usetate를 이용해 버튼을 클릭 시 +1 또는 -1을 하는 카운터를 만들었다.\n// - const [상태 값 저장 변수, 상태 값 갱신 함수] = useState(상태 초기 값);\n// - 위와 같이 useState를 사용하고, 배열의 첫 번째 값은 초기값, 두번 째 값은 초기값을 변경하는 함수이다.\n// - 함수에 값을 넣어주면 데이터 값이 업데이트 되고 업데이트 된 부분만 리렌더링한다.\n// - useState는 함수형에서 사용하고, Class를 사용할 시에는 setState를 사용한다.\n// - setNumber(prev => prev++)를 하면 오류가 나는 이유!\n//   찾아본 바로는 prev + 1은 prev의 값이 그대로인 상태에서 1을 더하고 다시 변수를 만들지만?\n//   prev++는 변수 값 자체를 '바꾸기' 때문이다.\n\n\n_s(StateFnc, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n\n_c = StateFnc;\nexport default StateFnc;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateFnc\");","map":{"version":3,"sources":["/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/StateFnc.js"],"names":["React","useState","StateFnc","number","setNumber","PlusNumer","prev","MinusNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAMI,SAAS,GAAG,MAAMD,SAAS,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAjC;;AACA,QAAMC,WAAW,GAAG,MAAMH,SAAS,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAnC;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAqBH,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAvBSL,Q;;KAAAA,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction StateFnc() {\n  const [number, setNumber] = useState(0);\n  const PlusNumer = () => setNumber(prev => prev + 1);\n  const MinusNumber = () => setNumber(prev => prev - 1);\n\n  return (\n    <div>\n      <h1>Counter</h1>\n      <h3>The number is : {number}</h3>\n      <button onClick={PlusNumer}>Plus</button>\n      <button onClick={MinusNumber}>Minus</button>\n    </div>\n  );\n}\n\n// NOTE!\n// - usetate를 이용해 버튼을 클릭 시 +1 또는 -1을 하는 카운터를 만들었다.\n// - const [상태 값 저장 변수, 상태 값 갱신 함수] = useState(상태 초기 값);\n// - 위와 같이 useState를 사용하고, 배열의 첫 번째 값은 초기값, 두번 째 값은 초기값을 변경하는 함수이다.\n// - 함수에 값을 넣어주면 데이터 값이 업데이트 되고 업데이트 된 부분만 리렌더링한다.\n// - useState는 함수형에서 사용하고, Class를 사용할 시에는 setState를 사용한다.\n// - setNumber(prev => prev++)를 하면 오류가 나는 이유!\n//   찾아본 바로는 prev + 1은 prev의 값이 그대로인 상태에서 1을 더하고 다시 변수를 만들지만?\n//   prev++는 변수 값 자체를 '바꾸기' 때문이다.\n\nexport default StateFnc;"]},"metadata":{},"sourceType":"module"}