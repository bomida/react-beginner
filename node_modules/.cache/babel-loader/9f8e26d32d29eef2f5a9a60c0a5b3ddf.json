{"ast":null,"code":"import _slicedToArray from\"/Users/BOM/Desktop/WEB/react-project/react-beginner/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PlusMinus(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),number=_useState2[0],setNumber=_useState2[1];var PlusNumer=function PlusNumer(){return setNumber(function(current){return current+1;});};var MinusNumber=function MinusNumber(){return setNumber(function(current){return current-1;});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Counter\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"The number is : \",number]}),/*#__PURE__*/_jsx(\"button\",{onClick:PlusNumer,children:\"Plus\"}),/*#__PURE__*/_jsx(\"button\",{onClick:MinusNumber,children:\"Minus\"})]});}// NOTE!\n// - usetate를 이용해 버튼을 클릭 시 +1 또는 -1을 하는 카운터를 만들었다.\n// - const [상태 값 저장 변수, 상태 값 갱신 함수] = useState(상태 초기 값);\n// - 위와 같이 useState를 사용하고, 배열의 첫 번째 값은 초기값을 두번 째 값은 초기값을 변경하는 함수이다.\n// - 함수에 값을 넣어주면 데이터 값이 업데이트 되고 업데이트 된 부분만 리렌더링한다.\n// - useState는 함수형에서 사용하고, Class를 사용할 시에는 setState를 사용한다.\n// - state를 세팅하는 데는 2가지 방법이 있다.\n//   1) 직접 할당 : setNumber( number + 1)\n//      -> 현재 state랑 관련이 없는 값을 새로운 state로 하고싶을 때\n//   2) 함수를 할당 : setNumber(current => current + 1)\n//      -> 현재 state에 조금의 변화를 주어서 새로운 state를 주고 싶을 때\n// - setNumber(current => current++)를 하면 오류가 나는 이유!\n//   찾아본 바로는 current + 1은 current의 값이 그대로인 상태에서 1을 더하고 다시 변수를 만들지만?\n//   current++는 변수 값 자체를 '바꾸기' 때문이다.\nexport default PlusMinus;","map":{"version":3,"sources":["/Users/BOM/Desktop/WEB/react-project/react-beginner/src/practice/StateFnc.js"],"names":["React","useState","PlusMinus","number","setNumber","PlusNumer","current","MinusNumber"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,cAA4BD,QAAQ,CAAC,CAAD,CAApC,wCAAOE,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMD,CAAAA,SAAS,CAAC,SAAAE,OAAO,QAAIA,CAAAA,OAAO,CAAG,CAAd,EAAR,CAAf,EAAlB,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMH,CAAAA,SAAS,CAAC,SAAAE,OAAO,QAAIA,CAAAA,OAAO,CAAG,CAAd,EAAR,CAAf,EAApB,CAEA,mBACE,oCACE,+BADF,cAEE,yCAAqBH,MAArB,GAFF,cAGE,eAAQ,OAAO,CAAEE,SAAjB,kBAHF,cAIE,eAAQ,OAAO,CAAEE,WAAjB,mBAJF,GADF,CAQD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAeL,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction PlusMinus() {\n  const [number, setNumber] = useState(0);\n  const PlusNumer = () => setNumber(current => current + 1);\n  const MinusNumber = () => setNumber(current => current - 1);\n\n  return (\n    <div>\n      <h1>Counter</h1>\n      <h3>The number is : {number}</h3>\n      <button onClick={PlusNumer}>Plus</button>\n      <button onClick={MinusNumber}>Minus</button>\n    </div>\n  );\n}\n\n// NOTE!\n// - usetate를 이용해 버튼을 클릭 시 +1 또는 -1을 하는 카운터를 만들었다.\n// - const [상태 값 저장 변수, 상태 값 갱신 함수] = useState(상태 초기 값);\n// - 위와 같이 useState를 사용하고, 배열의 첫 번째 값은 초기값을 두번 째 값은 초기값을 변경하는 함수이다.\n// - 함수에 값을 넣어주면 데이터 값이 업데이트 되고 업데이트 된 부분만 리렌더링한다.\n// - useState는 함수형에서 사용하고, Class를 사용할 시에는 setState를 사용한다.\n// - state를 세팅하는 데는 2가지 방법이 있다.\n//   1) 직접 할당 : setNumber( number + 1)\n//      -> 현재 state랑 관련이 없는 값을 새로운 state로 하고싶을 때\n//   2) 함수를 할당 : setNumber(current => current + 1)\n//      -> 현재 state에 조금의 변화를 주어서 새로운 state를 주고 싶을 때\n// - setNumber(current => current++)를 하면 오류가 나는 이유!\n//   찾아본 바로는 current + 1은 current의 값이 그대로인 상태에서 1을 더하고 다시 변수를 만들지만?\n//   current++는 변수 값 자체를 '바꾸기' 때문이다.\n\nexport default PlusMinus;"]},"metadata":{},"sourceType":"module"}